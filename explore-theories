#!/usr/bin/env bash

STDIN=0

if [[ "$#" -gt 0 ]]
then
    echo "Reading clusters from '$1'" >> /dev/stderr
    INPUT=$(cat "$1")
elif ! [ -t 0 ]
then
    echo "Reading clusters from stdin" >> /dev/stderr
    STDIN=1
    INPUT=$(cat)
else
    echo "Error: Please supply a filename or input to stdin" >> /dev/stderr
    exit 1
fi

function haveCmd {
    command -v "$1" > /dev/null 2>&1
}

function explore {
    PKGS=$(echo "$INPUT" | getPkgs)
    nix-shell --run "MLSpec $*" -p "$PKGS"
}

function pkgsFromInput {
    # Extracts packages as unquoted strings
    ARG='.[] | .[] | .package'
    if haveCmd jq
    then
        jq -r "$ARG"
    else
        nix-shell -p jq --run "jq -r '$ARG'"
    fi
}

function extraHaskellPackages {
    # Haskell packages required for MLSpec
    for PKG in mlspec mlspec-helper runtime-arbitrary quickspec
    do
        printf "h.$PKG "
    done
}

function extraPackages {
    printf "mlspec"
}

function mkGhcPkg {
    GIVEN=$(cat)
    printf "(haskellPackages.ghcWithPackages (h: [%s]))" "$GIVEN"
}

function mkName {
    U=$(tr -d '[[:space:]]' | md5sum | cut -d ' ' -f1)
    printf "explore-theories-$U"
}

function getPkgs {
    INPUT=$(cat)

    # Packages used by the given theories
    FROMINPUT=$(echo "$INPUT" | pkgsFromInput | sort -u | sed -e 's/^/h./' | tr '\n' ' ')

    # Packages for MLSpec
    EXTRAHASKELL=$(extraHaskellPackages)

    GHCPKG=$(echo "$FROMINPUT $EXTRAHASKELL" | mkGhcPkg)

    EXTRAS=$(extraPackages)

    NAME=$(echo "$FROMINPUT $EXTRAHASKELL $EXTRAS" | mkName)

    echo "buildEnv { name = \"${NAME}\"; paths = [$GHCPKG $EXTRAS];}"
}

if [[ "$STDIN" -eq 1 ]]
then
    echo "$INPUT" | explore "$@"
else
    explore "$@"
fi
