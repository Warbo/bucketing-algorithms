#!/usr/bin/env bash

STDIN=0

if [[ "$#" -gt 0 ]]
then
    echo "Reading clusters from '$1'" >> /dev/stderr
    INPUT=$(cat "$1")
elif ! [ -t 0 ]
then
    echo "Reading clusters from stdin" >> /dev/stderr
    STDIN=1
    INPUT=$(cat)
else
    echo "Error: Please supply a filename or input to stdin" >> /dev/stderr
    exit 1
fi

function haveCmd {
    command -v "$1" > /dev/null 2>&1
}

function explore {
    PKGS=$(echo "$INPUT" | getPkgs)
    nix-shell --run "MLSpec $*" -p $PKGS
}

function pkgsFromInput {
    # Extracts packages as unquoted strings
    ARG='.[] | .[] | .package'
    if haveCmd jq
    then
        jq -r "$ARG"
    else
        nix-shell -p jq --run "jq '$ARG'"
    fi
}

function getPkgs {
    # Packages required for MLSpec
    for PKG in mlspec mlspec-helper runtime-arbitrary
    do
        printf "haskellPackages.$PKG "
    done

    # Packages used by the given theories
    pkgsFromInput | sort -u | sed -e 's/^/haskellPackages./' | tr '\n' ' '

    echo "" # For the newline
}

if [[ "$STDIN" -eq 1 ]]
then
    echo "$INPUT" | explore "$@"
else
    explore "$@"
fi
