# Haskell Theory Exploration #

This repository is designed to allow reproducible experiments in theory
exploration, in the Haskell language. Many separate tools are used in this
implementation, tied together using the Nix expression language.

## Quick Summary ##

 - You'll need the Nix package manager and a UNIX-like OS (tested on Linux). Nix
   will take care of gathering any other dependencies.
 - The main "user facing" functionality is the package provided by `default.nix`
   which contains scripts for exploring Haskell packages:
  - `haskellPkgToAsts d` will look in directory `d` for a Haskell package (i.e.
    a `.cabal` file) and extract ASTs for every function defined in the package,
    including whether or not they're suitable for exploring.
  - `quickspecAsts d` will start GHC with the Haskell package of directory `d`
    in scope, and explore all of the suitable ASTs it's given on stdin.
  - `quickspec d` combines `haskellPkgToAsts d` and `quickspecAsts d`.
 - The main "researcher facing" functionality is the benchmark suite, which is
   explained in more detail by `benchmarks/README`.
