#!/usr/bin/env bash

function msg {
    echo -e "$1" 1>&2
}

# shellcheck disable=SC2153
[[ -n "$CLUSTERS" ]] || {
    msg "No CLUSTERS found in environment"
    exit 1
}

BASE=$(dirname "$0")
DEPS=$(cat)

while read -r SCC
do
    msg "Next SCC"
    while read -r ID
    do
        # TODO: Make this a more generic sub-set relation
        NAME=$(echo "$ID" | jq -r '.name')
        MOD=$( echo "$ID" | jq -r '.module')
        PKG=$( echo "$ID" | jq -r '.package')

        # shellcheck disable=SC2016
        COND='.name == $name and .module == $mod and .package == $pkg'

        msg "Marking '$ID' for clustering"
        DEPS=$(echo "$DEPS" | jq \
            --arg name "$NAME"   \
            --arg mod  "$MOD"    \
            --arg pkg  "$PKG"    \
            "map(if $COND then (. + {\"tocluster\": true}) else . end)")
    done < <(echo "$SCC" | jq -c '.[]')

    # Update all features with the latest clusters

    # Look up an ID in $deps
    # shellcheck disable=SC2016
    COND2='.name == $this.name and .module == $this.module and .package == $this.package'

    # shellcheck disable=SC2016
    LOOKUP='(. as $this | $deps | map(select('"$COND2"') | .cluster) | . + [0] | .[0] | . + 300)'
    FEATURES="(.features | map(if type == \"object\" then ($LOOKUP) else . end))"

    # Cluster. We call runWeka directly since nix-shell adds a lot of
    # overhead, which we move outside the loop to our own invocation
    msg "Clustering..."
    # shellcheck disable=SC2016
    CLUSTERED=$(
        echo "$DEPS" |
        jq '. as $deps | $deps | map(. + {"features": '"$FEATURES"'})' |
        "$BASE/runWeka")

    # Add new clusters to DEPS
    msg "Collating..."
    # shellcheck disable=SC2016
    DEPS=$(echo "$DEPS" | jq --argfile clustered <(echo "$CLUSTERED") \
                             'map(. as $this | $clustered | map(select(.name == $this.name and .module == $this.module and .package == $this.package)) | map(.cluster) | if length == 1 then $this + {"cluster": .[0]} else $this end)')
done < <(echo "$DEPS" | order-deps | jq -c '.[]')

msg "Done"
echo "$DEPS"
